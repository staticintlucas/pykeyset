name: CI

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@v1
        with:
          components: rustfmt, clippy
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-shear, taplo
      - run: cargo fmt --all -- --check
      - run: cargo clippy --all-targets --all-features
        env:
          RUSTFLAGS: -D warnings
      - run: cargo shear
      - run: taplo fmt --check
      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          arguments: --workspace --all-features

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64, i686, aarch64]
    steps:
      - uses: actions/checkout@v5
      - uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          manylinux: 2014
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.target }}
          path: dist

  build-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - arch: x86_64
            python: x64
          - arch: i686
            python: x86 # This works around PyO3 requiring 32-bit Python even though it's not used
          - arch: aarch64
            python: x64
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          architecture: ${{ matrix.target.python }}
      - uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target.arch }}
          args: --release --out dist
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.target.arch }}
          path: dist

  build-macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.target }}
          path: dist

  build-sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [lint, build-linux, build-windows, build-macos, build-sdist]
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
      - uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*
