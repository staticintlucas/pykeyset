name: Tests

on: [push, pull_request]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ~3.8
      - name: Install pre-commit
        run: pip install -U pre-commit
      - name: Run pre-commit
        run: pre-commit run -a

  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    needs: Lint
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [Ubuntu, MacOS, Windows]
        python-version: ['3.6', '3.7', '3.8', '3.9'] # , 'pypy-3.6'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get Python version
        id: python-version
        run: |
          echo "::set-output name=version::$(python -c 'import platform; print(platform.python_version())')"
      - name: Install Poetry
        uses: Gr1N/setup-poetry@v4
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-3-${{ runner.os }}-${{ steps.python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Configure Poetry
        run: poetry config virtualenvs.in-project true -vvv
      - name: Install repo
        run: poetry install -vvv
      - name: Run tests
        run: poetry run pytest -q tests --cov=pykeyset --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        if: matrix.os == 'Ubuntu' && matrix.python-version == '3.9'
        with:
          fail_ci_if_error: true
